{"ast":null,"code":"import _regeneratorRuntime from \"/home/bruno/Documentos/ignite/desafios/blogPrismic/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/home/bruno/Documentos/ignite/desafios/blogPrismic/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/home/bruno/Documentos/ignite/desafios/blogPrismic/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/bruno/Documentos/ignite/desafios/blogPrismic/src/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nimport Link from 'next/link';\nimport { useState } from 'react';\nimport { FiUser, FiCalendar } from 'react-icons/fi';\nimport { format } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport styles from './home.module.scss';\nexport var __N_SSG = true;\nexport default function Home(_ref) {\n  _s();\n\n  var _this = this;\n\n  var postsPagination = _ref.postsPagination;\n\n  var _useState = useState(postsPagination.results),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  var _useState2 = useState(postsPagination.next_page),\n      nextPage = _useState2[0],\n      setNextPage = _useState2[1];\n\n  function handleClickLoadPost() {\n    return _handleClickLoadPost.apply(this, arguments);\n  }\n\n  function _handleClickLoadPost() {\n    _handleClickLoadPost = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, resultsNextPage;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(nextPage === null)) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              _context.next = 4;\n              return fetch(\"\".concat(nextPage)).then(function (r) {\n                return r.json();\n              });\n\n            case 4:\n              response = _context.sent;\n              resultsNextPage = response.results.map(function (post) {\n                return {\n                  uid: post.uid,\n                  first_publication_date: post.first_publication_date,\n                  data: {\n                    title: post.data.title,\n                    subtitle: post.data.subtitle,\n                    author: post.data.author\n                  }\n                };\n              });\n              setNextPage(response.next_page);\n              setPosts([].concat(_toConsumableArray(posts), _toConsumableArray(resultsNextPage)));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleClickLoadPost.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.container,\n      children: [posts.map(function (post) {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/post/\".concat(post.uid),\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: post.data.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.data.subtitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(FiCalendar, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, _this), format(new Date(post.first_publication_date), 'dd MMM yyyy', {\n                locale: ptBR\n              }), /*#__PURE__*/_jsxDEV(FiUser, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, _this), post.data.author]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, _this)\n        }, post.uid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, _this);\n      }), nextPage && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleClickLoadPost,\n        children: \"Carregar mais posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), preview && /*#__PURE__*/_jsxDEV(\"aside\", {\n        className: styles.preview,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/api/exitPreview\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"Sair do modo Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Home, \"uVDpVtEuPywY1N7sSe2eobO7OFo=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/bruno/Documentos/ignite/desafios/blogPrismic/src/pages/index.tsx"],"names":["Link","useState","FiUser","FiCalendar","format","ptBR","styles","Home","postsPagination","results","posts","setPosts","next_page","nextPage","setNextPage","handleClickLoadPost","fetch","then","r","json","response","resultsNextPage","map","post","uid","first_publication_date","data","title","subtitle","author","container","Date","locale","preview"],"mappings":"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","sourcesContent":["import { GetStaticProps } from 'next';\nimport Link from 'next/link'\nimport { useState } from 'react';\nimport { FiUser, FiCalendar } from 'react-icons/fi'\n\nimport Prismic from '@prismicio/client'\nimport { getPrismicClient } from '../services/prismic';\n\nimport { format } from 'date-fns'\nimport ptBR from 'date-fns/locale/pt-BR';\n\nimport styles from './home.module.scss';\n\ninterface Post {\n  uid?: string;\n  first_publication_date: string | null;\n  data: {\n    title: string;\n    subtitle: string;\n    author: string;\n  };\n}\n\ninterface PostPagination {\n  next_page: string;\n  results: Post[];\n}\n\ninterface HomeProps {\n  preview: boolean\n  postsPagination: PostPagination;\n}\n\nexport default function Home({ postsPagination }: HomeProps) {\n\n  const [posts, setPosts] = useState(postsPagination.results)\n  const [nextPage, setNextPage] = useState(postsPagination.next_page)\n\n  async function handleClickLoadPost() {\n    if (nextPage === null) {\n      return\n    }\n\n    const response = await fetch(`${nextPage}`).then(r => r.json())\n\n    const resultsNextPage = response.results.map(post => {\n      return {\n        uid: post.uid,\n        first_publication_date: post.first_publication_date,\n        data: {\n          title: post.data.title,\n          subtitle: post.data.subtitle,\n          author: post.data.author\n        }\n      }\n    })\n\n    setNextPage(response.next_page)\n    setPosts([...posts, ...resultsNextPage])\n\n  }\n\n  return (\n    <>\n      <main className={styles.container}>\n        {posts.map(post => (\n          <Link key={post.uid} href={`/post/${post.uid}`}>\n            <a>\n              <h1>{post.data.title}</h1>\n              <p>{post.data.subtitle}</p>\n              <div>\n                <FiCalendar />\n                {format(\n                  new Date(post.first_publication_date),\n                  'dd MMM yyyy',\n                  {\n                    locale: ptBR\n                  }\n                )}\n                <FiUser />\n                {post.data.author}\n              </div>\n            </a>\n          </Link>\n        ))}\n        {nextPage && (\n          <button\n            type='button'\n            onClick={handleClickLoadPost}\n          >\n            Carregar mais posts\n          </button>)}\n        {preview && (\n          <aside className={styles.preview}>\n            <Link href=\"/api/exitPreview\">\n              <a>Sair do modo Preview</a>\n            </Link>\n          </aside>\n        )}\n      </main>\n    </>\n  )\n}\n\nexport const getStaticProps: GetStaticProps = async ({ \n  preview = false,\n  previewData, \n}) => {\n  const prismic = getPrismicClient();\n\n  const postsResponse = await prismic.query([\n    Prismic.predicates.at('document.type', 'post')\n  ], {\n    fetch: ['post.title', 'post.subtitle', 'post.author'],\n    pageSize: 1\n  });\n\n  const results = postsResponse.results.map(post => {\n    return {\n      uid: post.uid,\n      first_publication_date: post.first_publication_date,\n      data: {\n        title: post.data.title,\n        subtitle: post.data.subtitle,\n        author: post.data.author\n      }\n    }\n  })\n\n  const postsPagination = {\n    results,\n    next_page: postsResponse.next_page\n  }\n\n  return {\n    props: {\n      postsPagination\n    },\n    revalidate: 60 * 60 * 6 // 6 horas\n  }\n\n};\n"]},"metadata":{},"sourceType":"module"}