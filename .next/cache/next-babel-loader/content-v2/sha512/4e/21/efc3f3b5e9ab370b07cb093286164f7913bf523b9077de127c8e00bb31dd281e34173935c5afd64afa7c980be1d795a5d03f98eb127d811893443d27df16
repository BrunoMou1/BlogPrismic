{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { FiClock, FiCalendar, FiUser } from 'react-icons/fi';\nimport Link from 'next/link';\nimport { RichText } from \"prismic-dom\";\nimport { format } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport styles from './post.module.scss';\nimport { useRouter } from 'next/router';\nimport Comments from '../../components/Comments';\nimport { PostNavigator } from '../../components/PostNavigator/PostNavigator';\nexport var __N_SSG = true;\nexport default function Post(_ref) {\n  var post = _ref.post,\n      preview = _ref.preview,\n      previousPost = _ref.previousPost,\n      nextPost = _ref.nextPost;\n  var router = useRouter();\n\n  if (router.isFallback) {\n    return /*#__PURE__*/_jsx(\"h1\", {\n      children: \"Carregando...\"\n    });\n  }\n\n  var publicatedAt = format(new Date(post.first_publication_date), 'dd MMM yyyy', {\n    locale: ptBR\n  });\n  var updatedAt = format(new Date(post.last_publication_date), 'dd MMM yyyy', {\n    locale: ptBR\n  });\n  var updatedAtHours = format(new Date(post.last_publication_date), \"kk:mm\", {\n    locale: ptBR\n  });\n  var wordsNumber = post.data.content.map(function (item) {\n    var text = RichText.asText(item.body);\n    var aux = [];\n    var arr = text.split(' ');\n    var arrConcat = aux.concat(arr).length;\n    return arrConcat;\n  });\n  var readTime = wordsNumber.reduce(function (acc, item) {\n    var total = acc + item;\n    var time = Math.ceil(total / 200);\n    return time;\n  }, 0);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: styles.banner,\n      children: /*#__PURE__*/_jsx(\"img\", {\n        src: post.data.banner.url,\n        alt: \"banner\"\n      })\n    }), /*#__PURE__*/_jsxs(\"main\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsx(\"h1\", {\n        children: post.data.title\n      }), /*#__PURE__*/_jsxs(\"section\", {\n        children: [/*#__PURE__*/_jsx(FiCalendar, {}), publicatedAt, /*#__PURE__*/_jsx(FiUser, {}), post.data.author, /*#__PURE__*/_jsx(FiClock, {}), readTime, \" min\"]\n      }), updatedAt !== publicatedAt && /*#__PURE__*/_jsxs(\"p\", {\n        className: styles.updatedAt,\n        children: [\"* editado em \", updatedAt, \", \\xE0s \", updatedAtHours]\n      }), post.data.content.map(function (item) {\n        return /*#__PURE__*/_jsxs(\"article\", {\n          className: styles.content,\n          children: [/*#__PURE__*/_jsx(\"h2\", {\n            children: item.heading\n          }), /*#__PURE__*/_jsx(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: RichText.asHtml(item.body)\n            }\n          })]\n        }, item.heading);\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.wrapper\n      }), /*#__PURE__*/_jsx(PostNavigator, {\n        previous: previousPost,\n        next: nextPost\n      }), /*#__PURE__*/_jsx(Comments, {}), preview && /*#__PURE__*/_jsx(\"aside\", {\n        className: styles.preview,\n        children: /*#__PURE__*/_jsx(Link, {\n          href: \"/api/exitPreview\",\n          children: /*#__PURE__*/_jsx(\"a\", {\n            children: \"Sair do modo Preview\"\n          })\n        })\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}